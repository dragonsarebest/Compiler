[
 {
  "gname": "g1.txt",
  "name": "i1-1.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "x=42\n",
  "badParse": true
 },
 {
  "gname": "g1.txt",
  "name": "i1-2.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "else\n    bar();\n        \n",
  "badParse": true
 },
 {
  "gname": "g1.txt",
  "name": "i1-3.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "x = 1 + 2 + + 3;\n",
  "badParse": true
 },
 {
  "gname": "g1.txt",
  "name": "i1-4.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "42 + 3;\n",
  "badParse": true
 },
 {
  "gname": "g1.txt",
  "name": "v1-1.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "x=42;\n",
  "badParse": false,
  "expectedTree": {
   "sym": "S",
   "children": [
    {
     "sym": "stmt",
     "children": [
      {
       "sym": "assign",
       "children": [
        {
         "sym": "ID",
         "token": {
          "sym": "ID",
          "lexeme": "x",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "EQ",
         "token": {
          "sym": "EQ",
          "lexeme": "=",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "sum",
         "children": [
          {
           "sym": "prod",
           "children": [
            {
             "sym": "pow",
             "children": [
              {
               "sym": "factor",
               "children": [
                {
                 "sym": "NUM",
                 "token": {
                  "sym": "NUM",
                  "lexeme": "42",
                  "line": 1
                 },
                 "children": []
                }
               ],
               "rhs": [
                "NUM"
               ]
              }
             ],
             "rhs": [
              "factor"
             ]
            }
           ],
           "rhs": [
            "pow"
           ]
          }
         ],
         "rhs": [
          "prod"
         ]
        }
       ],
       "rhs": [
        "ID",
        "EQ",
        "sum"
       ]
      },
      {
       "sym": "SEMI",
       "token": {
        "sym": "SEMI",
        "lexeme": ";",
        "line": 1
       },
       "children": []
      }
     ],
     "rhs": [
      "assign",
      "SEMI"
     ]
    }
   ],
   "rhs": [
    "stmt"
   ]
  }
 },
 {
  "gname": "g1.txt",
  "name": "v1-2.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "foo();\nx=42;\n",
  "badParse": false,
  "expectedTree": {
   "sym": "S",
   "children": [
    {
     "sym": "stmt",
     "children": [
      {
       "sym": "func",
       "children": [
        {
         "sym": "ID",
         "token": {
          "sym": "ID",
          "lexeme": "foo",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "LP",
         "token": {
          "sym": "LP",
          "lexeme": "(",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "plist",
         "children": [],
         "rhs": []
        },
        {
         "sym": "RP",
         "token": {
          "sym": "RP",
          "lexeme": ")",
          "line": 1
         },
         "children": []
        }
       ],
       "rhs": [
        "ID",
        "LP",
        "plist",
        "RP"
       ]
      },
      {
       "sym": "SEMI",
       "token": {
        "sym": "SEMI",
        "lexeme": ";",
        "line": 1
       },
       "children": []
      }
     ],
     "rhs": [
      "func",
      "SEMI"
     ]
    },
    {
     "sym": "S",
     "children": [
      {
       "sym": "stmt",
       "children": [
        {
         "sym": "assign",
         "children": [
          {
           "sym": "ID",
           "token": {
            "sym": "ID",
            "lexeme": "x",
            "line": 2
           },
           "children": []
          },
          {
           "sym": "EQ",
           "token": {
            "sym": "EQ",
            "lexeme": "=",
            "line": 2
           },
           "children": []
          },
          {
           "sym": "sum",
           "children": [
            {
             "sym": "prod",
             "children": [
              {
               "sym": "pow",
               "children": [
                {
                 "sym": "factor",
                 "children": [
                  {
                   "sym": "NUM",
                   "token": {
                    "sym": "NUM",
                    "lexeme": "42",
                    "line": 2
                   },
                   "children": []
                  }
                 ],
                 "rhs": [
                  "NUM"
                 ]
                }
               ],
               "rhs": [
                "factor"
               ]
              }
             ],
             "rhs": [
              "pow"
             ]
            }
           ],
           "rhs": [
            "prod"
           ]
          }
         ],
         "rhs": [
          "ID",
          "EQ",
          "sum"
         ]
        },
        {
         "sym": "SEMI",
         "token": {
          "sym": "SEMI",
          "lexeme": ";",
          "line": 2
         },
         "children": []
        }
       ],
       "rhs": [
        "assign",
        "SEMI"
       ]
      }
     ],
     "rhs": [
      "stmt"
     ]
    }
   ],
   "rhs": [
    "stmt",
    "S"
   ]
  }
 },
 {
  "gname": "g1.txt",
  "name": "v1-3.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "foo(1+2,3*4,5**6);\n",
  "badParse": false,
  "expectedTree": {
   "sym": "S",
   "children": [
    {
     "sym": "stmt",
     "children": [
      {
       "sym": "func",
       "children": [
        {
         "sym": "ID",
         "token": {
          "sym": "ID",
          "lexeme": "foo",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "LP",
         "token": {
          "sym": "LP",
          "lexeme": "(",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "plist",
         "children": [
          {
           "sym": "sum",
           "children": [
            {
             "sym": "sum",
             "children": [
              {
               "sym": "prod",
               "children": [
                {
                 "sym": "pow",
                 "children": [
                  {
                   "sym": "factor",
                   "children": [
                    {
                     "sym": "NUM",
                     "token": {
                      "sym": "NUM",
                      "lexeme": "1",
                      "line": 1
                     },
                     "children": []
                    }
                   ],
                   "rhs": [
                    "NUM"
                   ]
                  }
                 ],
                 "rhs": [
                  "factor"
                 ]
                }
               ],
               "rhs": [
                "pow"
               ]
              }
             ],
             "rhs": [
              "prod"
             ]
            },
            {
             "sym": "ADDOP",
             "token": {
              "sym": "ADDOP",
              "lexeme": "+",
              "line": 1
             },
             "children": []
            },
            {
             "sym": "prod",
             "children": [
              {
               "sym": "pow",
               "children": [
                {
                 "sym": "factor",
                 "children": [
                  {
                   "sym": "NUM",
                   "token": {
                    "sym": "NUM",
                    "lexeme": "2",
                    "line": 1
                   },
                   "children": []
                  }
                 ],
                 "rhs": [
                  "NUM"
                 ]
                }
               ],
               "rhs": [
                "factor"
               ]
              }
             ],
             "rhs": [
              "pow"
             ]
            }
           ],
           "rhs": [
            "sum",
            "ADDOP",
            "prod"
           ]
          },
          {
           "sym": "CMA",
           "token": {
            "sym": "CMA",
            "lexeme": ",",
            "line": 1
           },
           "children": []
          },
          {
           "sym": "plist'",
           "children": [
            {
             "sym": "sum",
             "children": [
              {
               "sym": "prod",
               "children": [
                {
                 "sym": "prod",
                 "children": [
                  {
                   "sym": "pow",
                   "children": [
                    {
                     "sym": "factor",
                     "children": [
                      {
                       "sym": "NUM",
                       "token": {
                        "sym": "NUM",
                        "lexeme": "3",
                        "line": 1
                       },
                       "children": []
                      }
                     ],
                     "rhs": [
                      "NUM"
                     ]
                    }
                   ],
                   "rhs": [
                    "factor"
                   ]
                  }
                 ],
                 "rhs": [
                  "pow"
                 ]
                },
                {
                 "sym": "MULOP",
                 "token": {
                  "sym": "MULOP",
                  "lexeme": "*",
                  "line": 1
                 },
                 "children": []
                },
                {
                 "sym": "pow",
                 "children": [
                  {
                   "sym": "factor",
                   "children": [
                    {
                     "sym": "NUM",
                     "token": {
                      "sym": "NUM",
                      "lexeme": "4",
                      "line": 1
                     },
                     "children": []
                    }
                   ],
                   "rhs": [
                    "NUM"
                   ]
                  }
                 ],
                 "rhs": [
                  "factor"
                 ]
                }
               ],
               "rhs": [
                "prod",
                "MULOP",
                "pow"
               ]
              }
             ],
             "rhs": [
              "prod"
             ]
            },
            {
             "sym": "CMA",
             "token": {
              "sym": "CMA",
              "lexeme": ",",
              "line": 1
             },
             "children": []
            },
            {
             "sym": "plist'",
             "children": [
              {
               "sym": "sum",
               "children": [
                {
                 "sym": "prod",
                 "children": [
                  {
                   "sym": "pow",
                   "children": [
                    {
                     "sym": "factor",
                     "children": [
                      {
                       "sym": "NUM",
                       "token": {
                        "sym": "NUM",
                        "lexeme": "5",
                        "line": 1
                       },
                       "children": []
                      }
                     ],
                     "rhs": [
                      "NUM"
                     ]
                    },
                    {
                     "sym": "STARSTAR",
                     "token": {
                      "sym": "STARSTAR",
                      "lexeme": "**",
                      "line": 1
                     },
                     "children": []
                    },
                    {
                     "sym": "pow",
                     "children": [
                      {
                       "sym": "factor",
                       "children": [
                        {
                         "sym": "NUM",
                         "token": {
                          "sym": "NUM",
                          "lexeme": "6",
                          "line": 1
                         },
                         "children": []
                        }
                       ],
                       "rhs": [
                        "NUM"
                       ]
                      }
                     ],
                     "rhs": [
                      "factor"
                     ]
                    }
                   ],
                   "rhs": [
                    "factor",
                    "STARSTAR",
                    "pow"
                   ]
                  }
                 ],
                 "rhs": [
                  "pow"
                 ]
                }
               ],
               "rhs": [
                "prod"
               ]
              }
             ],
             "rhs": [
              "sum"
             ]
            }
           ],
           "rhs": [
            "sum",
            "CMA",
            "plist'"
           ]
          }
         ],
         "rhs": [
          "sum",
          "CMA",
          "plist'"
         ]
        },
        {
         "sym": "RP",
         "token": {
          "sym": "RP",
          "lexeme": ")",
          "line": 1
         },
         "children": []
        }
       ],
       "rhs": [
        "ID",
        "LP",
        "plist",
        "RP"
       ]
      },
      {
       "sym": "SEMI",
       "token": {
        "sym": "SEMI",
        "lexeme": ";",
        "line": 1
       },
       "children": []
      }
     ],
     "rhs": [
      "func",
      "SEMI"
     ]
    }
   ],
   "rhs": [
    "stmt"
   ]
  }
 },
 {
  "gname": "g1.txt",
  "name": "v1-4.txt",
  "grammar": "IF -> \\bif\\b\nELSE -> \\belse\\b\nADDOP -> [-+]\nSTARSTAR -> [*][*]\nMULOP -> [*/%]\nNUM -> -?\\d+\nID -> [A-Za-z_]\\w*\nLP -> [(]\nRP -> [)]\nEQ -> =\nSEMI -> ;\nCMA -> ,\n\nS -> stmt S | stmt\nstmt -> assign SEMI | func SEMI | cond\nassign -> ID EQ sum\nfunc -> ID LP plist RP\nplist -> lambda | sum | sum CMA plist'\nplist' -> sum | sum CMA plist'\nsum -> sum ADDOP prod | prod\nprod -> prod MULOP pow | pow\npow -> factor STARSTAR pow | factor\nfactor -> ID | NUM | LP sum RP\ncond -> IF LP sum RP stmt | IF LP sum RP stmt ELSE stmt\n",
  "input": "if( x )\n    if( y )\n        foo(1+2*3);\n    else\n        bar();\n        \n",
  "badParse": false,
  "expectedTree": {
   "sym": "S",
   "children": [
    {
     "sym": "stmt",
     "children": [
      {
       "sym": "cond",
       "children": [
        {
         "sym": "IF",
         "token": {
          "sym": "IF",
          "lexeme": "if",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "LP",
         "token": {
          "sym": "LP",
          "lexeme": "(",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "sum",
         "children": [
          {
           "sym": "prod",
           "children": [
            {
             "sym": "pow",
             "children": [
              {
               "sym": "factor",
               "children": [
                {
                 "sym": "ID",
                 "token": {
                  "sym": "ID",
                  "lexeme": "x",
                  "line": 1
                 },
                 "children": []
                }
               ],
               "rhs": [
                "ID"
               ]
              }
             ],
             "rhs": [
              "factor"
             ]
            }
           ],
           "rhs": [
            "pow"
           ]
          }
         ],
         "rhs": [
          "prod"
         ]
        },
        {
         "sym": "RP",
         "token": {
          "sym": "RP",
          "lexeme": ")",
          "line": 1
         },
         "children": []
        },
        {
         "sym": "stmt",
         "children": [
          {
           "sym": "cond",
           "children": [
            {
             "sym": "IF",
             "token": {
              "sym": "IF",
              "lexeme": "if",
              "line": 2
             },
             "children": []
            },
            {
             "sym": "LP",
             "token": {
              "sym": "LP",
              "lexeme": "(",
              "line": 2
             },
             "children": []
            },
            {
             "sym": "sum",
             "children": [
              {
               "sym": "prod",
               "children": [
                {
                 "sym": "pow",
                 "children": [
                  {
                   "sym": "factor",
                   "children": [
                    {
                     "sym": "ID",
                     "token": {
                      "sym": "ID",
                      "lexeme": "y",
                      "line": 2
                     },
                     "children": []
                    }
                   ],
                   "rhs": [
                    "ID"
                   ]
                  }
                 ],
                 "rhs": [
                  "factor"
                 ]
                }
               ],
               "rhs": [
                "pow"
               ]
              }
             ],
             "rhs": [
              "prod"
             ]
            },
            {
             "sym": "RP",
             "token": {
              "sym": "RP",
              "lexeme": ")",
              "line": 2
             },
             "children": []
            },
            {
             "sym": "stmt",
             "children": [
              {
               "sym": "func",
               "children": [
                {
                 "sym": "ID",
                 "token": {
                  "sym": "ID",
                  "lexeme": "foo",
                  "line": 3
                 },
                 "children": []
                },
                {
                 "sym": "LP",
                 "token": {
                  "sym": "LP",
                  "lexeme": "(",
                  "line": 3
                 },
                 "children": []
                },
                {
                 "sym": "plist",
                 "children": [
                  {
                   "sym": "sum",
                   "children": [
                    {
                     "sym": "sum",
                     "children": [
                      {
                       "sym": "prod",
                       "children": [
                        {
                         "sym": "pow",
                         "children": [
                          {
                           "sym": "factor",
                           "children": [
                            {
                             "sym": "NUM",
                             "token": {
                              "sym": "NUM",
                              "lexeme": "1",
                              "line": 3
                             },
                             "children": []
                            }
                           ],
                           "rhs": [
                            "NUM"
                           ]
                          }
                         ],
                         "rhs": [
                          "factor"
                         ]
                        }
                       ],
                       "rhs": [
                        "pow"
                       ]
                      }
                     ],
                     "rhs": [
                      "prod"
                     ]
                    },
                    {
                     "sym": "ADDOP",
                     "token": {
                      "sym": "ADDOP",
                      "lexeme": "+",
                      "line": 3
                     },
                     "children": []
                    },
                    {
                     "sym": "prod",
                     "children": [
                      {
                       "sym": "prod",
                       "children": [
                        {
                         "sym": "pow",
                         "children": [
                          {
                           "sym": "factor",
                           "children": [
                            {
                             "sym": "NUM",
                             "token": {
                              "sym": "NUM",
                              "lexeme": "2",
                              "line": 3
                             },
                             "children": []
                            }
                           ],
                           "rhs": [
                            "NUM"
                           ]
                          }
                         ],
                         "rhs": [
                          "factor"
                         ]
                        }
                       ],
                       "rhs": [
                        "pow"
                       ]
                      },
                      {
                       "sym": "MULOP",
                       "token": {
                        "sym": "MULOP",
                        "lexeme": "*",
                        "line": 3
                       },
                       "children": []
                      },
                      {
                       "sym": "pow",
                       "children": [
                        {
                         "sym": "factor",
                         "children": [
                          {
                           "sym": "NUM",
                           "token": {
                            "sym": "NUM",
                            "lexeme": "3",
                            "line": 3
                           },
                           "children": []
                          }
                         ],
                         "rhs": [
                          "NUM"
                         ]
                        }
                       ],
                       "rhs": [
                        "factor"
                       ]
                      }
                     ],
                     "rhs": [
                      "prod",
                      "MULOP",
                      "pow"
                     ]
                    }
                   ],
                   "rhs": [
                    "sum",
                    "ADDOP",
                    "prod"
                   ]
                  }
                 ],
                 "rhs": [
                  "sum"
                 ]
                },
                {
                 "sym": "RP",
                 "token": {
                  "sym": "RP",
                  "lexeme": ")",
                  "line": 3
                 },
                 "children": []
                }
               ],
               "rhs": [
                "ID",
                "LP",
                "plist",
                "RP"
               ]
              },
              {
               "sym": "SEMI",
               "token": {
                "sym": "SEMI",
                "lexeme": ";",
                "line": 3
               },
               "children": []
              }
             ],
             "rhs": [
              "func",
              "SEMI"
             ]
            },
            {
             "sym": "ELSE",
             "token": {
              "sym": "ELSE",
              "lexeme": "else",
              "line": 4
             },
             "children": []
            },
            {
             "sym": "stmt",
             "children": [
              {
               "sym": "func",
               "children": [
                {
                 "sym": "ID",
                 "token": {
                  "sym": "ID",
                  "lexeme": "bar",
                  "line": 5
                 },
                 "children": []
                },
                {
                 "sym": "LP",
                 "token": {
                  "sym": "LP",
                  "lexeme": "(",
                  "line": 5
                 },
                 "children": []
                },
                {
                 "sym": "plist",
                 "children": [],
                 "rhs": []
                },
                {
                 "sym": "RP",
                 "token": {
                  "sym": "RP",
                  "lexeme": ")",
                  "line": 5
                 },
                 "children": []
                }
               ],
               "rhs": [
                "ID",
                "LP",
                "plist",
                "RP"
               ]
              },
              {
               "sym": "SEMI",
               "token": {
                "sym": "SEMI",
                "lexeme": ";",
                "line": 5
               },
               "children": []
              }
             ],
             "rhs": [
              "func",
              "SEMI"
             ]
            }
           ],
           "rhs": [
            "IF",
            "LP",
            "sum",
            "RP",
            "stmt",
            "ELSE",
            "stmt"
           ]
          }
         ],
         "rhs": [
          "cond"
         ]
        }
       ],
       "rhs": [
        "IF",
        "LP",
        "sum",
        "RP",
        "stmt"
       ]
      }
     ],
     "rhs": [
      "cond"
     ]
    }
   ],
   "rhs": [
    "stmt"
   ]
  }
 }
]